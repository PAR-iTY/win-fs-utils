"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _nodeId=_interopRequireDefault(require("node-id3"));require("core-js/modules/es.array.slice.js"),require("core-js/modules/es.object.to-string.js"),require("core-js/modules/es.function.name.js"),require("core-js/modules/es.array.from.js"),require("core-js/modules/es.string.iterator.js"),require("core-js/modules/es.regexp.test.js"),require("core-js/modules/es.symbol.js"),require("core-js/modules/es.symbol.description.js"),require("core-js/modules/es.symbol.iterator.js"),require("core-js/modules/es.array.iterator.js"),require("core-js/modules/web.dom-collections.iterator.js"),require("core-js/modules/es.array.is-array.js"),require("core-js/modules/es.object.define-property.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.tweakTagsObject=exports.tweakTags=void 0,require("core-js/modules/es.array.concat.js"),require("core-js/modules/es.regexp.exec.js"),require("core-js/modules/es.string.replace.js");function _createForOfIteratorHelper(a,b){var c="undefined"!=typeof Symbol&&a[Symbol.iterator]||a["@@iterator"];if(!c){if(Array.isArray(a)||(c=_unsupportedIterableToArray(a))||b&&a&&"number"==typeof a.length){c&&(a=c);var d=0,e=function(){};return{s:e,n:function n(){return d>=a.length?{done:!0}:{done:!1,value:a[d++]}},e:function e(a){throw a},f:e}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var f,g=!0,h=!1;return{s:function s(){c=c.call(a)},n:function n(){var a=c.next();return g=a.done,a},e:function e(a){h=!0,f=a},f:function f(){try{g||null==c["return"]||c["return"]()}finally{if(h)throw f}}}}function _unsupportedIterableToArray(a,b){if(a){if("string"==typeof a)return _arrayLikeToArray(a,b);var c=Object.prototype.toString.call(a).slice(8,-1);return"Object"===c&&a.constructor&&(c=a.constructor.name),"Map"===c||"Set"===c?Array.from(a):"Arguments"===c||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(c)?_arrayLikeToArray(a,b):void 0}}function _arrayLikeToArray(a,b){(null==b||b>a.length)&&(b=a.length);for(var c=0,d=Array(b);c<b;c++)d[c]=a[c];return d}var tweakTags=function(a,b,c,d){console.time("tweakTags load time");var e={noRaw:!0};try{var f,g=_createForOfIteratorHelper(a);try{for(g.s();!(f=g.n()).done;){var h=f.value,i=_nodeId["default"].read(h,e),j=tweakTagsObject(i,b,c,d),k=_nodeId["default"].write(j,h);k||console.error("[tag write error]",h)}}catch(a){g.e(a)}finally{g.f()}}catch(a){console.error("NodeID3 error:",a)}console.timeEnd("tweakTags load time")};exports.tweakTags=tweakTags;var tweakTagsObject=function(a,b,c,d){return console.log("existing tags.".concat(b,":"),a["".concat(b)]),c?(console.log("looking for '".concat(c,"' substring in '").concat(b,"' tag..")),"artist"===b.toLowerCase()&&(a.artist=a.artist.replace("".concat(c),d),a.performerInfo=a.performerInfo.replace("".concat(c),d)),a["".concat(b)]=a["".concat(b)].replace("".concat(c),d)):"artist"===b.toLowerCase()?(a.artist=d,a.performerInfo=d):a["".concat(b)]=d,console.log("updated tags.".concat(b,":"),a["".concat(b)]),a};exports.tweakTagsObject=tweakTagsObject;